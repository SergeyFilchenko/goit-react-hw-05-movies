{"version":3,"file":"static/js/10.ac45bcf0.chunk.js","mappings":"8UAIO,SAASA,IACd,OAA+BC,EAAAA,EAAAA,UAAS,IAAxC,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBN,OAhBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEH,GAAa,GADf,mBAG4BI,EAAAA,EAAAA,IAAaH,GAHzC,OAGUI,EAHV,OAIIP,EAAQO,GAJZ,gDAOIC,QAAQC,IAAI,KAAMC,SAPtB,yBASIR,GAAa,GATjB,6EADc,uBAAC,WAAD,wBAadS,KACC,CAACR,IAEG,CAAEJ,YAAAA,EAAaE,UAAAA,GCtBjB,SAASW,IACd,OAAwBd,EAAAA,EAAAA,UAAS,IAAjC,eAAOe,EAAP,KAAaC,EAAb,KACA,GAAkChB,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBN,OAhBAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEH,GAAa,GADf,mBAGuBa,EAAAA,EAAAA,IAAaZ,GAHpC,OAGUU,EAHV,OAIIC,EAAQD,EAAKA,MAJjB,gDAOIL,QAAQC,IAAI,KAAMC,QAAS,iCAP/B,yBASIR,GAAa,GATjB,6EADc,uBAAC,WAAD,wBAadc,KACC,CAACb,IAEG,CAAEU,KAAAA,EAAMZ,UAAAA,G,uBCtBV,SAASgB,EAA6BC,GAC3C,OAA0CpB,EAAAA,EAAAA,UAAS,IAAnD,eAAOqB,EAAP,KAAsBC,EAAtB,KACA,GAAkCtB,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KA4BA,OA1BAG,EAAAA,EAAAA,YAAU,WAAM,wCAId,2FACEH,GAAa,GADf,mBAGwBmB,EAAAA,EAAAA,IAAaH,GAHrC,UAIiC,KADvBI,EAHV,QAIcC,QAAQC,OAJtB,yCAKaC,MAAM,oCAAD,OAC0BP,EAD1B,mCALlB,OASIE,EAAiBE,EAAMC,SAT3B,kDAYIf,QAAQC,IACN,KAAMC,QACN,qDAdN,yBAiBIR,GAAa,GAjBjB,8EAJc,sBACTgB,GADS,mCAwBdF,KACC,CAACE,IACG,CAAEC,cAAAA,EAAelB,UAAAA,GC/BnB,SAASyB,IACd,OAA0B5B,EAAAA,EAAAA,UAAS,IAAnC,eAAOwB,EAAP,KAAcK,EAAd,KACA,GAAkC7B,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAmBA,OAhBAG,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEH,GAAa,GADf,mBAGgC0B,EAAAA,EAAAA,MAHhC,OAGUC,EAHV,OAIIF,EAASE,GAJb,gDAOIrB,QAAQC,IAAI,KAAMC,SAPtB,yBASIR,GAAa,GATjB,6EADc,uBAAC,WAAD,wBAadc,KACC,IAEI,CAAEM,MAAAA,EAAOrB,UAAAA,GCpBX,SAAS6B,IACd,OAA4BhC,EAAAA,EAAAA,UAAS,IAArC,eAAOiC,EAAP,KAAeC,EAAf,KACA,GAAkClC,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,GAAYC,EAAAA,EAAAA,MAAZD,QAiBN,OAfAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEH,GAAa,GADf,mBAGyB+B,EAAAA,EAAAA,IAAa9B,GAHtC,OAGU4B,EAHV,OAIIC,EAAUD,EAAOR,SAJrB,gDAMIf,QAAQC,IAAI,KAAMC,QAAS,qCAN/B,yBAQIR,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAYdc,KACC,CAACb,IAEG,CAAE4B,OAAAA,EAAQ9B,UAAAA,GFYnBgB,EAA6BiB,UAAY,CACvChB,YAAaiB,IAAAA,OAAAA,a,kOGpCFC,EAAY,kCAEzBC,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeV,IAAtB,4CAAO,OAAP,oBAAO,oGACkBS,IAAAA,IAAA,qCAAwCC,IAD1D,cACCC,EADD,yBAEEA,EAASC,KAAKjB,SAFhB,kEAKA,SAAeF,EAAtB,+CAAO,OAAP,oBAAO,WAA4BoB,GAA5B,uFACkBJ,IAAAA,IAAA,gCACIC,EADJ,wCAC2CG,EAD3C,wBADlB,cACCF,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAelC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BH,GAA5B,uFACkBkC,IAAAA,IAAA,iBACXlC,EADW,oBACQmC,EADR,oBADlB,cACCC,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAezB,EAAtB,+CAAO,OAAP,oBAAO,WAA4BZ,GAA5B,uFACkBkC,IAAAA,IAAA,iBACXlC,EADW,4BACgBmC,EADhB,oBADlB,cACCC,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeP,EAAtB,+CAAO,OAAP,oBAAO,WAA4B9B,GAA5B,uFACkBkC,IAAAA,IAAA,iBACXlC,EADW,4BACgBmC,EADhB,2BADlB,cACCC,EADD,yBAIEA,EAASC,MAJX,oE,+HCRP,MApBA,YAAwD,IAAlCE,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,UACxC,OACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEC,OAAO,QACPC,IACEJ,EAAY,UACLN,EAAAA,GAAYM,GADP,6EAIdK,IAAKJ,OAGT,SAAC,KAAD,CAAMK,WAAW,MAAjB,SAAwBL,KACxB,SAAC,KAAD,UAAOC,QCKb,MApBA,WACE,OAA4BhC,EAAAA,EAAAA,KAApBC,EAAR,EAAQA,KAAMZ,EAAd,EAAcA,UAEd,OACE,+BACIA,IACA,SAAC,KAAD,CAAYgD,cAAc,QAAQC,QAAQ,OAA1C,SACGrC,EAAKsC,KAAI,gBAAGC,EAAH,EAAGA,QAASV,EAAZ,EAAYA,aAAcC,EAA1B,EAA0BA,KAAMC,EAAhC,EAAgCA,UAAhC,OACR,SAAC,EAAD,CAEEF,aAAcA,EACdC,KAAMA,EACNC,UAAWA,GAHNQ,Y,kGCRnB,SAASC,IAeP,OAdAA,EAAWC,OAAOC,QAAU,SAAUC,GACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUlC,OAAQiC,IAAK,CACzC,IAAIE,EAASD,UAAUD,GAEvB,IAAK,IAAIG,KAAOD,EACVL,OAAOO,UAAUC,eAAeC,KAAKJ,EAAQC,KAC/CJ,EAAOI,GAAOD,EAAOC,IAK3B,OAAOJ,GAGFH,EAASW,MAAMC,KAAMP,WAG9B,SAASQ,EAA8BP,EAAQQ,GAC7C,GAAc,MAAVR,EAAgB,MAAO,GAC3B,IAEIC,EAAKH,EAFLD,EAAS,GACTY,EAAad,OAAOe,KAAKV,GAG7B,IAAKF,EAAI,EAAGA,EAAIW,EAAW5C,OAAQiC,IACjCG,EAAMQ,EAAWX,GACbU,EAASG,QAAQV,IAAQ,IAC7BJ,EAAOI,GAAOD,EAAOC,IAGvB,OAAOJ,EA6FT,IAAIe,EAAY,CAAC,YAAa,aAAc,OACxCC,EAAa,CAAC,cAAe,WAAY,MAAO,SAAU,QAAS,MAAO,UAAW,iBAAkB,eACvGC,EAA2BC,EAAAA,YAAiB,SAAUC,EAAOC,GAC/D,IAAIC,EAAYF,EAAME,UAClBC,EAAaH,EAAMG,WACnB/B,EAAM4B,EAAM5B,IACZgC,EAAOb,EAA8BS,EAAOJ,GAEhD,OAAoBG,EAAAA,cAAoB,MAAOrB,EAAS,CACtD2B,MAAOH,EACPhC,OAAQiC,EACRF,IAAKA,EACL7B,IAAKA,GACJgC,OASDE,GAAuBC,EAAAA,EAAAA,KAAW,SAAUP,EAAOC,GACrD,IAAIO,EAAcR,EAAMQ,YACpBC,EAAWT,EAAMS,SACjBtC,EAAM6B,EAAM7B,IACZuC,EAASV,EAAMU,OACfC,EAAQX,EAAMW,MACdC,EAAMZ,EAAMY,IACZC,EAAUb,EAAMa,QAChBC,EAAiBd,EAAMc,eACvBC,EAAcf,EAAMe,YACpBX,EAAOb,EAA8BS,EAAOH,GAO5CmB,EAA0B,MAAXH,GAAmBC,QAAkCG,IAAhBT,QAA0CS,IAAbR,EAEjFS,EAnHN,SAAkBlB,GAChB,IAAIa,EAAUb,EAAMa,QAChB1C,EAAM6B,EAAM7B,IACZuC,EAASV,EAAMU,OACfS,EAASnB,EAAMmB,OACfC,EAAUpB,EAAMoB,QAChBL,EAAcf,EAAMe,YACpBM,EAAQrB,EAAMqB,MACdP,EAAiBd,EAAMc,eAEvBQ,GAAYnG,EAAAA,EAAAA,UAAS,WACrB+F,EAASI,EAAU,GACnBC,EAAYD,EAAU,IAE1B5F,EAAAA,EAAAA,YAAU,WACR6F,EAAUpD,EAAM,UAAY,aAC3B,CAACA,IACJ,IAAIqD,GAAWC,EAAAA,EAAAA,UACXC,GAAOC,EAAAA,EAAAA,cAAY,WACrB,GAAKxD,EAAL,CACAyD,IACA,IAAIC,EAAM,IAAIC,MACdD,EAAI1D,IAAMA,EACN4C,IAAac,EAAId,YAAcA,GAC/BL,IAAQmB,EAAIE,OAASrB,GACrBW,IAAOQ,EAAIR,MAAQA,GACnBR,IAASgB,EAAIhB,QAAUA,GAE3BgB,EAAIG,OAAS,SAAUC,GACrBL,IACAL,EAAU,UACA,MAAVJ,GAA0BA,EAAOc,IAGnCJ,EAAIK,QAAU,SAAUC,GACtBP,IACAL,EAAU,UACC,MAAXH,GAA2BA,EAAQe,IAGrCX,EAASY,QAAUP,KAClB,CAAC1D,EAAK4C,EAAaL,EAAQW,EAAOF,EAAQC,EAASP,IAElDe,EAAQ,WACNJ,EAASY,UACXZ,EAASY,QAAQJ,OAAS,KAC1BR,EAASY,QAAQF,QAAU,KAC3BV,EAASY,QAAU,OAwBvB,OApBAC,EAAAA,EAAAA,IAAoB,WAKlB,IAAIvB,EAMJ,MAJe,YAAXI,GACFQ,IAGK,WACLE,OAED,CAACV,EAAQQ,EAAMZ,IAMXA,EAAiB,SAAWI,EA4CtBoB,CAAS5D,EAAS,GAAIsB,EAAO,CACxCc,eAAgBE,KAGduB,EAAS7D,EAAS,CACpBuB,IAAKA,EACLuC,UAAW5B,EACX6B,eAAgB9B,GACfK,EAAeZ,GAAOsC,EAAAA,EAAAA,IAAKtC,EAAM,CAAC,UAAW,YAEhD,MAAe,WAAXc,EAKET,GACgBV,EAAAA,cAAoB4C,EAAAA,GAAAA,IAAYjE,EAAS,CAC3DkE,GAAI9C,EACJ+C,UAAW,4BACX1E,IAAKqC,GACJ+B,IAGexC,EAAAA,cAAoB4C,EAAAA,GAAAA,IAAYjE,EAAS,CAC3DkE,GAAI9C,EACJ3B,IAAKA,EACLuC,OAAQA,EACRK,YAAaA,EACbF,QAASA,EACTgC,UAAW,gBACVN,OAeDO,EAAAA,KACFxC,EAAQyC,YAAc","sources":["hooks/useFetchDetailsOneFilm.jsx","hooks/useFechCastOfTheFilm.jsx","hooks/useFetchSearchMovieOnRequest.jsx","hooks/useFetchTrendingFilms.jsx","hooks/useFatchReviewsOfTheFilm.jsx","services/apiRequests.js","components/ActorCards/ActorCards.jsx","views/CastView.jsx","../node_modules/@chakra-ui/image/dist/chakra-ui-image.esm.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieDetails } from 'services/apiRequests';\n\nexport function useFetchDetailsOneFilm() {\n  const [filmDetails, setFilm] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n  let { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovie() {\n      setIsLoading(true);\n      try {\n        const movieData = await movieDetails(movieId);\n        setFilm(movieData);\n      } catch (error) {\n        // setError(error);\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovie();\n  }, [movieId]);\n\n  return { filmDetails, isLoading };\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieCredits } from 'services/apiRequests';\n\nexport function useFechCastOfTheFilm() {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  let { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovies() {\n      setIsLoading(true);\n      try {\n        const cast = await movieCredits(movieId);\n        setCast(cast.cast);\n      } catch (error) {\n        // setError(error);\n        console.log(error.message, 'ERROR by useFechCastOfTheFilm');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovies();\n  }, [movieId]);\n\n  return { cast, isLoading };\n}\n","import { useState, useEffect } from 'react';\nimport { searchMovies } from 'services/apiRequests';\nimport PropTypes from 'prop-types';\n\nexport function useFetchSearchMovieOnRequest(searchQuery) {\n  const [filmsBySearch, setFilmsBySearch] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    async function getMovies() {\n      setIsLoading(true);\n      try {\n        const films = await searchMovies(searchQuery);\n        if (films.results.length === 0) {\n          return alert(\n            `Nothing was found for the query \"${searchQuery}\", please specify your query)`\n          );\n        }\n        setFilmsBySearch(films.results);\n      } catch (error) {\n        // setError(error);\n        console.log(\n          error.message,\n          'An error occurred in useFetchSearchMovieOnRequest'\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovies();\n  }, [searchQuery]);\n  return { filmsBySearch, isLoading };\n}\n\nuseFetchSearchMovieOnRequest.propTypes = {\n  searchQuery: PropTypes.string.isRequired,\n};\n","import { useEffect, useState } from 'react';\nimport { getTrending } from '../services/apiRequests';\n\nexport function useFetchTrendingFilms() {\n  const [films, setFilms] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  //  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function getMovies() {\n      setIsLoading(true);\n      try {\n        const trendingFilms = await getTrending();\n        setFilms(trendingFilms);\n      } catch (error) {\n        // setError(error);\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovies();\n  }, []);\n\n  return { films, isLoading };\n}\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieReviews } from 'services/apiRequests';\n\nexport function useFatchReviewsOfTheFilm() {\n  const [review, setReview] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  let { movieId } = useParams();\n\n  useEffect(() => {\n    async function getMovies() {\n      setIsLoading(true);\n      try {\n        const review = await movieReviews(movieId);\n        setReview(review.results);\n      } catch (error) {\n        console.log(error.message, 'ERROR by useFatchReviewsOfTheFilm');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovies();\n  }, [movieId]);\n\n  return { review, isLoading };\n}\n","import axios from 'axios';\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst APi_KEY = '191efeeb865bc4c787fee73d3a367440';\n\nexport async function getTrending() {\n  const response = await axios.get(`/trending/all/week?api_key=${APi_KEY}`);\n  return response.data.results;\n}\n\nexport async function searchMovies(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=${APi_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return response.data;\n}\n\nexport async function movieDetails(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${APi_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieCredits(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${APi_KEY}&language=en-US`\n  );\n  return response.data;\n}\n\nexport async function movieReviews(movieId) {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${APi_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n}\n","import React from 'react';\nimport { IMAGE_URL } from 'services/apiRequests';\nimport { Box, Text, Image } from '@chakra-ui/react';\nimport PropTypes from 'prop-types';\n\nfunction ActorCards({ profile_path, name, character }) {\n  return (\n    <Box>\n      <Box>\n        <Image\n          height=\"250px\"\n          src={\n            profile_path\n              ? `${IMAGE_URL + profile_path}`\n              : `https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg`\n          }\n          alt={name}\n        />\n      </Box>\n      <Text fontWeight=\"700\">{name}</Text>\n      <Text>{character}</Text>\n    </Box>\n  );\n}\n\nexport default ActorCards;\n\nActorCards.propTypes = {\n  profile_path: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { SimpleGrid } from '@chakra-ui/react';\nimport { useFechCastOfTheFilm } from 'hooks';\nimport ActorCards from 'components/ActorCards/ActorCards';\n\nfunction CastView() {\n  const { cast, isLoading } = useFechCastOfTheFilm();\n\n  return (\n    <>\n      {!isLoading && (\n        <SimpleGrid minChildWidth=\"250px\" spacing=\"30px\">\n          {cast.map(({ cast_id, profile_path, name, character }) => (\n            <ActorCards\n              key={cast_id}\n              profile_path={profile_path}\n              name={name}\n              character={character}\n            />\n          ))}\n        </SimpleGrid>\n      )}\n    </>\n  );\n}\nexport default CastView;\n","import { forwardRef, chakra } from '@chakra-ui/system';\nimport { omit, __DEV__ } from '@chakra-ui/utils';\nimport * as React from 'react';\nimport { useState, useEffect, useRef, useCallback } from 'react';\nimport { useSafeLayoutEffect } from '@chakra-ui/hooks';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\n/**\n * React hook that loads an image in the browser,\n * and lets us know the `status` so we can show image\n * fallback if it is still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\nfunction useImage(props) {\n  var loading = props.loading,\n      src = props.src,\n      srcSet = props.srcSet,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      crossOrigin = props.crossOrigin,\n      sizes = props.sizes,\n      ignoreFallback = props.ignoreFallback;\n\n  var _useState = useState(\"pending\"),\n      status = _useState[0],\n      setStatus = _useState[1];\n\n  useEffect(function () {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  var imageRef = useRef();\n  var load = useCallback(function () {\n    if (!src) return;\n    flush();\n    var img = new Image();\n    img.src = src;\n    if (crossOrigin) img.crossOrigin = crossOrigin;\n    if (srcSet) img.srcset = srcSet;\n    if (sizes) img.sizes = sizes;\n    if (loading) img.loading = loading;\n\n    img.onload = function (event) {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n\n    img.onerror = function (error) {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError, loading]);\n\n  var flush = function flush() {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n\n  useSafeLayoutEffect(function () {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return undefined;\n\n    if (status === \"loading\") {\n      load();\n    }\n\n    return function () {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n\n  return ignoreFallback ? \"loaded\" : status;\n}\n\nvar _excluded = [\"htmlWidth\", \"htmlHeight\", \"alt\"],\n    _excluded2 = [\"fallbackSrc\", \"fallback\", \"src\", \"srcSet\", \"align\", \"fit\", \"loading\", \"ignoreFallback\", \"crossOrigin\"];\nvar NativeImage = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var htmlWidth = props.htmlWidth,\n      htmlHeight = props.htmlHeight,\n      alt = props.alt,\n      rest = _objectWithoutPropertiesLoose(props, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    width: htmlWidth,\n    height: htmlHeight,\n    ref: ref,\n    alt: alt\n  }, rest));\n});\n\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/image\n */\nvar Image$1 = /*#__PURE__*/forwardRef(function (props, ref) {\n  var fallbackSrc = props.fallbackSrc,\n      fallback = props.fallback,\n      src = props.src,\n      srcSet = props.srcSet,\n      align = props.align,\n      fit = props.fit,\n      loading = props.loading,\n      ignoreFallback = props.ignoreFallback,\n      crossOrigin = props.crossOrigin,\n      rest = _objectWithoutPropertiesLoose(props, _excluded2);\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   */\n\n\n  var shouldIgnore = loading != null || ignoreFallback || fallbackSrc === undefined && fallback === undefined; // if the user doesn't provide any kind of fallback we should ignore it\n\n  var status = useImage(_extends({}, props, {\n    ignoreFallback: shouldIgnore\n  }));\n\n  var shared = _extends({\n    ref: ref,\n    objectFit: fit,\n    objectPosition: align\n  }, shouldIgnore ? rest : omit(rest, [\"onError\", \"onLoad\"]));\n\n  if (status !== \"loaded\") {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback;\n    return /*#__PURE__*/React.createElement(chakra.img, _extends({\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc\n    }, shared));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    as: NativeImage,\n    src: src,\n    srcSet: srcSet,\n    crossOrigin: crossOrigin,\n    loading: loading,\n    className: \"chakra-image\"\n  }, shared));\n});\n\n/**\n * Fallback component for most SSR users who want to use the native `img` with\n * support for chakra props\n */\nvar Img = /*#__PURE__*/forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    ref: ref,\n    as: NativeImage,\n    className: \"chakra-image\"\n  }, props));\n});\n\nif (__DEV__) {\n  Image$1.displayName = \"Image\";\n}\n\nexport { Image$1 as Image, Img, useImage };\n"],"names":["useFetchDetailsOneFilm","useState","filmDetails","setFilm","isLoading","setIsLoading","movieId","useParams","useEffect","movieDetails","movieData","console","log","message","getMovie","useFechCastOfTheFilm","cast","setCast","movieCredits","getMovies","useFetchSearchMovieOnRequest","searchQuery","filmsBySearch","setFilmsBySearch","searchMovies","films","results","length","alert","useFetchTrendingFilms","setFilms","getTrending","trendingFilms","useFatchReviewsOfTheFilm","review","setReview","movieReviews","propTypes","PropTypes","IMAGE_URL","axios","APi_KEY","response","data","query","profile_path","name","character","height","src","alt","fontWeight","minChildWidth","spacing","map","cast_id","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded","_excluded2","NativeImage","React","props","ref","htmlWidth","htmlHeight","rest","width","Image$1","forwardRef","fallbackSrc","fallback","srcSet","align","fit","loading","ignoreFallback","crossOrigin","shouldIgnore","undefined","status","onLoad","onError","sizes","_useState","setStatus","imageRef","useRef","load","useCallback","flush","img","Image","srcset","onload","event","onerror","error","current","useSafeLayoutEffect","useImage","shared","objectFit","objectPosition","omit","chakra","as","className","__DEV__","displayName"],"sourceRoot":""}